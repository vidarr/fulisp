* Make NIL a constant variable within expression.c, distinguish NIL from (struct
  Expression *)

* Implement type cast functions within types.h/.c

* Implement functions:
  - -
  - <
  - =  (numeric comparison)
  - eq (pointer equality)
  - cond
  - cons
  - car
  - cdr

* Make set! to define and introduce set! that modifies existing variables only
  (currently, there is no possibility to alter variable on surrounding env, even
  if symbol is unbound in current env, because set! will just create it

* Introduce "default function" in environment that will be called if symbol
  could not be resolved


Done

* Merge config.h and fulispcfg.h

* Bind lambdaCreate to 'lambda' aymbol

* Work out reader test: Read in expressions, compare string print of reader
  result to expected strings

* Print out function pointers correctly

* Reader should parse '+' and '-' into symbol '+' resp. '-' and not int:0

* Error: Introduce error-handling function to be called by pointer.
         Allow setting custom error function

* Environment: Make all functions take an Environment struct
               Introduce Environment into reader

* Merge sub structures of Reader directly into Reader to save resolution of
        pointer

